-----------------------------------------------------------------------------------------------
===> diceGameChallenge.html file
-----------------------------------------------------------------------------------------------
1. Set the score variable scoreP1 on line 17 for P2 as it's set for P1 above.
2. Set the current score variable currentP1 on line 20 for P2 as it's set for P1 above.

3. Connect the handleRollBtnClicked() function to the button element on line 25 as shown on line 24.
4. Connect the handleHoldBtnClicked() function to the button element on line 26 as shown on line 24.

-----------------------------------------------------------------------------------------------
===> diceGameChallenge.js file
-----------------------------------------------------------------------------------------------
5. On line 24 use the console.log method to print the message 'New button was clicked' in the console.
    (https://developer.mozilla.org/en-US/docs/Web/API/console/log)
6. On line 25 call the init function. (this keyword must be used)
7. The handleRollBtnClicked() function should wait for the sleep() function on line 50.
    Use the keywords async/await to achive the desired result. (https://www.w3schools.com/js/js_async.asp)
8. On line 35 use the console.log method to print the message 'Roll button was clicked' in the console.
9. On line 38, find a way to get a reference for the element on line 32 in the html file using the data attribute.
    In this context the document object is replaced by template. You will have to use the keyword 'this'.
    (https://www.w3schools.com/jsref/met_document_queryselector.asp), (https://sabe.io/blog/javascript-query-elements-data-attribute)
10. On line 43 create a for loop to iterate a variable i with values from 1 to 6 incrementing by 1.
    Surround the commented block bellow the line.
11. On line 55 add the value of the diceNum variable to the currentScore variable. Use the 'this' where it's needed.
12. On line 58 call the appropriate function to switch the player.
13. On line 64 use the console.log method to print the message 'Hold button was clicked' in the console.
14. On line 66 add currentScore to active player's score.
    You will have to use the scores array and the activePlayer and currentScore variables along with the keyword this.
15. Fill in the if statement with the appropriate condition, checking if the active player's score is greater or equal to 30.
    Use scores and activePlayer.
16. On line 81 call the appropriate function to switch the player.
17. On line 108 add the class player--active to the player0El element
18. On line 109 remove the class player--active from the player1El element
19. On line 115 create an if statement and check the value of the activePlayer variable.
    The possible values are 'P0' and 'P1'. For every value, set the other one to activePlayer to switch the players.